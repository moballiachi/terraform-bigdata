/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-04T16:19:27.367Z")

@Api(value = "catalogue", description = "the catalogue API")
@RequestMapping(value = "")
public interface CatalogueApi {

    @ApiOperation(value = "Consulta el catálogo perteneciente a un inquilino por el código de un catálogo.", nickname = "cataloguesGETMaxNumber", notes = "Efectua consulta del catálogo de un inquilino por el código de un catálogo.", tags={ "Catalogues", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Información del catálogo."),
        @ApiResponse(code = 400, message = "El mensaje de solicitud no se encuentra debidamente formateado."),
        @ApiResponse(code = 401, message = "No se encuentra autorizado para ejecutar la operación."),
        @ApiResponse(code = 403, message = "La solicitud ha sido denegada."),
        @ApiResponse(code = 404, message = "El objeto no fue encontrado."),
        @ApiResponse(code = 405, message = "La operación (método, ej: GET, POST, etc.) que se trata de ejecutar no se encuentra soportado para el contexto."),
        @ApiResponse(code = 406, message = "La solicitud no fue aceptada."),
        @ApiResponse(code = 429, message = "Se ha realizado la solicitud más de una vez."),
        @ApiResponse(code = 500, message = "Se presentó un error durante el procesamiento de la solicitud.") })
    @RequestMapping(value = "/catalogue/{catalogue}",
        method = RequestMethod.GET)
    default ResponseEntity<Void> cataloguesGETMaxNumber(@ApiParam(value = "JSON Web Token (JWT) entregado al usuario en la autenticación." ,required=true) @RequestHeader(value="Authorization", required=true) Object authorization,@ApiParam(value = "Identificación única de la solicitud o petición." ,required=true) @RequestHeader(value="X-Request-ID", required=true) Object xRequestID,@ApiParam(value = "Login de usuario en la aplicación de front-end que realiza la petición." ,required=true) @RequestHeader(value="X-EndUser-Login", required=true) Object xEndUserLogin,@ApiParam(value = "Fecha y hora en la que se originó la solicitud o petición por el usuario en la aplicación de front-end." ,required=true) @RequestHeader(value="X-EndUser-RequestDateTime", required=true) Object xEndUserRequestDateTime,@ApiParam(value = "Terminal (IP, número de teléfono, o identificador del dispositivo) desde el cual se originó la solicitud o petición por el usuario en la aplicación de front-end." ,required=true) @RequestHeader(value="X-EndUser-Terminal", required=true) Object xEndUserTerminal,@ApiParam(value = "Código del catálogo.",required=true) @PathVariable("catalogue") Object catalogue,@ApiParam(value = "ID del banco o entidad financiera que provee el servicio de cuentas de ahorros." ) @RequestHeader(value="X-Financial-ID", required=false) Object xFinancialID,@ApiParam(value = "Fecha y hora del último logueo del usuario en la aplicación." ) @RequestHeader(value="X-EndUser-LastLoggedDateTime", required=false) Object xEndUserLastLoggedDateTime) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CatalogueApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
